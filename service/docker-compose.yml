version: "3.8"

services:
  php:
    build: .
    ports:
      - "8055:80"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-app}@database:5432/${POSTGRES_DB:-app}"
      REDIS_URL: "redis://redis:6379"
      APP_ENV: "prod"
      APP_DEBUG: "0"
      # PHP-FPM optimization
      PHP_FPM_PM: "dynamic"
      PHP_FPM_PM_MAX_CHILDREN: "50"
      PHP_FPM_PM_START_SERVERS: "10"
      PHP_FPM_PM_MIN_SPARE_SERVERS: "5"
      PHP_FPM_PM_MAX_SPARE_SERVERS: "15"
      PHP_FPM_PM_MAX_REQUESTS: "500"
    restart: unless-stopped
    privileged: true
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:nsjail
    volumes:
      - submissions_data:/var/www/html/public/submissions

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    mem_limit: 1g

  redis:
    image: redis:7-alpine
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_data:/data
    mem_limit: 512m
    restart: unless-stopped

volumes:
  database_data:
  redis_data:
  submissions_data: